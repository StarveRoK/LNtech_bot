from app import keyboard
from app import SQlite
from aiogram.utils.markdown import hbold

"""------------------------------<<<–ü–ï–†–ï–ú–ï–ù–ù–´–ï>>>------------------------------"""

set_1 = "–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Å–µ—Ä–≤–µ—Ä. " \
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ–ª—É—á–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.\n\n- –Ω–∞ –ø–µ—Ä–≤—É—é –ø–æ–∫—É–ø–∫—É " \
        "—Å–∫–∏–¥–∫–∞ 20% –ø–æ –∫—É–ø–æ–Ω—É ‚Äì‚òÅÔ∏èOBLAKA‚òÅÔ∏è(–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫—É–ø–æ–Ω –º–æ–∂–Ω–æ –≤ \"–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å\")\n-–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —É –Ω–∞—Å " \
        "–Ω–∞ —Å–∞–π—Ç–µ msk.oblaka.tech"
set_2 = f"–ü—Ä–æ–º–æ–∫–æ–¥ –ø–æ —Å–ª–æ–≤—É‚òÅÔ∏è OBLAKA ‚òÅÔ∏è–æ—Ç–Ω–∏–º–∞–µ—Ç 20% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ 1 –ø—É–Ω–∫—Ç–∞!\n–ó–∞–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ!"
set_3 = "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥üéÅ"
set_4 = "‚òÅÔ∏è–ù–∞–¥–µ–∂–Ω–æ–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–ª–∞–∫–æ–∏ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–ºüí∏\n\nüñ•–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞ " \
        "–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏\n\nüë®‚Äçüíº –£—Å–ª—É–≥–∏ –∫–æ—Ç–æ—Ä—ã–µ –≤—Ö–æ–¥—è—Ç –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è:\n1.üìö –†–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏;\n" \
        "2.üë∑‚Äç‚ôÇÔ∏è–õ—é–±–æ–π —Ç–∞—Ä–∏—Ñ –æ–±—Å—É–∂–¥–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –ø–æ–¥ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏ –∏ —Ü–µ–Ω–æ–≤—É—é –ø–æ–ª–∏—Ç–∏–∫—É;\n3.üîß–ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ª—é–±—ã–µ " \
        "—Å–∏—Å—Ç–µ–º—ã Windows/Linux;\n4.‚òÅÔ∏è–û–±–ª–∞—á–Ω–∞—è 1–°.\n\nüíΩ –í–æ–∑–º–æ–∂–Ω—ã –ª—é–±—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏ –∏ –¥–∏—Å–∫–æ–≤.\n\nüì° –ü–æ–º–æ–∂–µ–º " \
        "–æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ, —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ò–¢ - —Å–µ—Ä–≤–∏—Å—ã —Å –Ω—É–ª—è."
set_5 = "–ü—Ä–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –æ —Å–µ—Ä–≤–µ—Ä–∞—Ö, –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—Éüìû"
referal = "üíº –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\nüéØ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç: 10%\nüí∞ –ó–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø–ª–∞—Ç—è—Ç —Ç–æ–≤–∞—Ä " \
          "–≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ 10% —Å–∫–∏–¥–∫–∏ –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞\nüåê –î–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à " \
          "—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥! –ò–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª."
error = "–û–π-–æ–π...4Ô∏è‚É£0Ô∏è‚É£4Ô∏è‚É£ –û—à–∏–±–æ—á–∫–∞ –≤—ã—à–ª–∞"
input_referal = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª!ü§ù"
servers = {
        "serv_0":["üá∑üá∫","4","8","2400"],
        "serv_1":["üá∑üá∫","6","16","4000"],
        "serv_2":["üá∑üá∫","8","24","5500"],
        "serv_3":["üá∑üá∫","10","32","7000"],
        "serv_4":["üáµüá±","4","8","2400"],
        "serv_5":["üáµüá±","6","16","4000"],
        "serv_6":["üáµüá±","8","24","5500"],
        "serv_7":["üáµüá±","10","32","7000"],
        "serv_8":["üá∫üá∏","4","8","2400"],
        "serv_9":["üá∫üá∏","6","16","4000"],
        "serv_10":["üá∫üá∏","8","24","5500"],
        "serv_11":["üá∫üá∏","10","32","7000"]
           }
activate_coupon_string = "–í–∞—à –∫—É–ø–æ–Ω –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!"
user_have_no_coupon = "–í–∞—à –∫—É–ø–æ–Ω‚òÅÔ∏èOBLAKA ‚òÅÔ∏è—É–∂–µ –±—ã–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
bad_referal_code = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ç–∞–∫–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏–ª–∏ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥üò¨"

"""------------------------------<<<–§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–°–ß–ï–¢–ê>>>------------------------------"""

def text(choose, string_):
        answer = string_ + \
           f"\n–¶–µ–Ω–∞: {servers.get(choose)[3]}—Ä\n\n" \
           f"–û–°: Windows (–ø–æ –∑–∞–ø—Ä–æ—Å—É –ª—é–±—É—é –û–°)\n" \
           f"–Ø–¥—Ä–∞: {servers.get(choose)[1]} –Ø–¥—Ä–∞ —Ö 2.5-4.0 GHz\n" \
           f"–û–ó–£: {servers.get(choose)[2]} –ì–ë\n" \
           f"–ò–Ω—Ç–µ—Ä–Ω–µ—Ç: 1 –ì–±/—Å\n" \
           f"SSD: 128 –ì–±\n" \
           f"–õ–æ–∫–∞—Ü–∏—è: –†–æ—Å—Å–∏—è –ú–æ—Å–∫–≤–∞"
        return answer

def buy_server(choose):
    answer = f"{keyboard.s_d.get(choose)[0]}{keyboard.s_d.get(choose)[1]} –Ø–¥—Ä–∞ (2.5-4.0 GHz) | " \
    f"{keyboard.s_d.get(choose)[2]} –æ–∑—É | 128 ssd | {keyboard.s_d.get(choose)[3]}P"
    return answer


def text_my_profile(name, id, purchases, money):
    answer = f"–ü—Ä–æ—Ñ–∏–ª—å {hbold(name)} c –∞–π–¥–∏ {hbold(id)}\n–í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫: {purchases}\n–ë–∞–ª–∞–Ω—Å: {money}‚ÇΩ"
    return answer


def is_user(users, referal, id):
    referal = referal.replace("rf","")
    try:
        for user in users:
            user = list(user)
            if int(user[1]) == int(referal) and int(user[1]) != int(id):
                return True
    except:
        return False
    return False

def check_coupon_in_db(user, id):
    if int(user) == 1: #–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –ë–î –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫—É–ø–æ–Ω–∞
        SQlite.add_discount_oblaka(id)
        text = activate_coupon_string
    elif int(user) == 0: text = user_have_no_coupon
    else: text = error
    return text

def information_about_server(choose):
    if choose == "back_to_choose":
        tex = set_1
        reply_markup = keyboard.servers.as_markup()
        return tex, reply_markup
    buy_serv = buy_server(choose)
    tex = text(choose, buy_serv)
    reply_markup = keyboard.inline_keyboard_in_choose(choose, buy_serv)
    return tex, reply_markup

def check_referal_discount(id):
    db = SQlite.all_telegram_id()
    user = SQlite.user_info(id)
    for name in db:
        if str(name[12]) == str(id) and name[5] > 0 and str(name[1]) not in str(user[13]):
            SQlite.add_referal_discount(id)

            '''–°–¢–†–û–ö–ò –ù–ò–ñ–ï –î–û–õ–ñ–ù–´ –í–´–ü–û–õ–ù–Ø–¢–¨–°–Ø –¢–û–õ–¨–ö–û –ü–û–°–õ–ï –û–ü–õ–ê–¢–´!!!!!!!'''
            if name[13] == "no": user_invite = f"{str(name[1])}_"
            else: user_invite = f"{name[13]}{str(name[1])}_"
            SQlite.add_referal_discount_new_user(id, user_invite)


def buy_or_back(data, id):
    if data == "back_to_choosing_server":
        txt = set_1
        reply_markup = keyboard.servers.as_markup()
        return txt, reply_markup
    server_choose, discount = data.replace("buy_",""), "no"
    user_info = SQlite.user_info(id)
    price = int((servers.get(server_choose))[3])
    check_referal_discount(id)
    if int(user_info[7]) > 0 or int(user_info[8]) > 0:
        discount = max(int(user_info[7]), int(user_info[8]))
        price = price - (price * (discount/100))
        if int(user_info[7]) > int(user_info[8]): discount = "dis"
        else: discount = "ref"
    SQlite.server_choosing(discount, price, server_choose, id)
    txt = text(server_choose,"")
    txt = f"–í—ã –≤—ã–±—Ä–∞–ª–∏: \n{txt}\n\n–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {hbold(str(price))}–†"
    reply_markup = keyboard.buy_from.as_markup()
    return txt, reply_markup

def my_profile(id, name):
    SQlite.add_new_user(id, name)
    user_info = SQlite.user_info(id)
    txt = text_my_profile(name, id, str(user_info[5]), str(user_info[3]))
    reply_markup = keyboard.my_profile.as_markup()
    return txt, reply_markup

def oblaka(id, name):
    SQlite.add_new_user(id, name)
    user_info = SQlite.user_info(id)
    txt = check_coupon_in_db(user_info[4], id)
    return txt

def activate_coupon(id, name):
    user_info = SQlite.user_info(id)
    txt = text_my_profile(name, id, str(user_info[5]), str(user_info[3]))
    reply_markup = keyboard.my_profile.as_markup()
    return txt, reply_markup

def admin_panel(name):
    txt = f"{name} –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å!\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å –ø—É–Ω–∫—Ç—ã:"
    reply_markup = keyboard.admin_panel.as_markup()
    return txt, reply_markup

def db_into_message():
    db = SQlite.all_telegram_id()
    message = "id | telegram_id | username | money \n"
    for user in db:
        x=0
        while x!=4:
            message += f" {str(user[x])} |"
            x+=1
        message += "\n"
    return message